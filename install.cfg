schema:
  $schema: https://json-schema.org/draft/2020-12/schema
  $id: https://github.com/instructions-d-installation/installation-instruction/examples/pytorch/instruction_pytorch.schema.yml
  title: PyTorch Install Schema
  description: This is a schema which is used for constructing interactive installation instructions.
  type: object
  $comment: by Adam McKellar
  properties:
    build:
      title: Build
      description: Use the latest or the tested version.
      enum:
        - stable
        - preview
      default: stable
    __os__:
      title: Operating System
      description: The operating system you use.
      enum:
        - linux
        - macos
        - windows
    package:
      title: Package Manager
      description: The package manager you use.
      enum:
        - conda
        - pip
      default: pip
    compute_platform:
      title: Compute Platform
      description: Should your gpu or your cpu handle the task?
      enum:
        - cu118
        - cu121
        - ro60
        - cpu
      default: cu118
  required:
    - build
    - __os__
    - package
    - compute_platform
  additionalProperties: false

pretty:
  stable: Stable (2.3.0)
  preview: Preview (Nightly)
  linux: Linux
  macos: Mac
  windows: Windows
  conda: Conda
  pip: Pip
  cu118: CUDA 11.8
  cu121: CUDA 12.1
  ro60: ROCm 6.0
  cpu: CPU

------

{# command is macro which simply removes line breaks. #}
{% call command() %}

{# Adams spaghetti code #}
{% if package == "conda" %}
    conda install

    {% if __os__ == "macos" %}
        {% if compute_platform == "cpu" %}
            pytorch{{ "-nightly" if build == "preview" }}::pytorch torchvision torchaudio
        {% else %}
            {{ raise("Mac does not support ROCm or CUDA!") }}
        {% endif %}
    {% else %}
        pytorch torchvision torchaudio

        {% if compute_platform == "cu118" %}
            pytorch-cuda=11.8 -c nvidia
        {% elif compute_platform == "cu121" %}
            pytorch-cuda=12.1 -c nvidia
        {% elif compute_platform == "ro60" %}
            {{ raise("ROCm is currently not supported with conda on linux and not supported at all on windows!") }}
        {% else %}
            cpuonly
        {% endif %}
    {% endif %}

    -c pytorch{{ "-nightly" if build == "preview" }}

{% elif package == "pip" %}
    pip3 install {{ "--pre" if build == "preview" }} torch torchvision torchaudio

    {% if __os__ == "macos" %}
        {{ raise("Mac does not support ROCm or CUDA!") if compute_platform != "cpu" }}
        {% if build == "preview" %}
            --index-url https://download.pytorch.org/whl/nightly/cpu
        {% endif %}
    {% else %}

        {% if compute_platform == "cu118" %}
                --index-url https://download.pytorch.org/whl/{{ "nightly/" if build == "preview" }}cu118

        {% elif compute_platform == "cu121" %}
            {% if build == "preview" %}
                --index-url https://download.pytorch.org/whl/nightly/cu121
            {% else %}
                {% if __os__ == "windows" %}
                    --index-url https://download.pytorch.org/whl/cu121
                {% endif %}
            {% endif %}

        {% elif compute_platform == "ro60" %}
            {{ raise("Windows does not support ROCm!") if __os__ != "linux" }}
            --index-url https://download.pytorch.org/whl/{{ "nightly/" if build == "preview" }}rocm6.0

        {# CPU #}
        {% else %}
            {% if build == "preview" %}
                --index-url https://download.pytorch.org/whl/nightly/cpu
            {% else %}
                {% if __os__ == "linux" %}
                    --index-url https://download.pytorch.org/whl/cpu
                {% endif %}
            {% endif %}
        {% endif %}
    {% endif %}
{% endif %}
{% endcall %}